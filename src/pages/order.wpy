<template>
  <!--tab模块-->
  <view class="swiper-tab-pd">
    <tab @currentTab.user="getCurrentTab" :tabList.sync="tabList" :currentTab.sync="currentTab"></tab>
  </view>
  <scroll-view scroll-y="true" class="swiper-item-box" style="height:{{winHeight - 31}}px" bindscrolltolower="onReachBottom">
    <orderItem :orderList.sync="orderList"></orderItem>
    <!--加载更多时动画-->
    <bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>
    <!--暂无数据显示-->
    <view wx:if="{{is_empty}}" style="text-align:center;"> 没有数据了 </view>
  </scroll-view>
</template>
<script>
import wepy from 'wepy';
import Tab from '@/components/tab'
import {
  SYSTEM_INFO,
  USER_SPECICAL_INFO,
  ME,
} from '@/utils/constant';
import OrderItem from '@/components/order_item'
import BottomLoadMore from "../components/common/bottomLoadMore"
import Placeholder from "../components/common/placeholder"
import api from '@/api/api';
export default class Order extends wepy.page {
  config = {
    navigationBarTitleText: "我的订单",
  }
  components = {
    tab: Tab,
    orderItem: OrderItem,
    bottomLoadMore: BottomLoadMore,
    placeholder: Placeholder
  }
  data = {
    winHeight: 0,
    totalCount: 0,
    tabList: ["全部订单", "待付款", "待发货","已发货", "已完成", "已取消"],
    orderList: [],
    currentPage: 1,
    is_empty: false,
    orderStatus: "any",
    currentTab: 0,
    flag: 0,
    //是否显示 底部loading
    showLoading: true,
    //防止重复加载
    preventRepeatReuqest: false,
    //待付款
    pendingPayCount : 0,
    //待发货
    backrdersCount : 0,
    //待收货
    shippedCount : 0,

    receiveFlg : 0
  }

  async getMyOrder(currentTab,currentPage, size,refresh) {

    console.log("refresh值："+refresh);
    let that = this;

    if (currentTab == 0) {
        that.orderStatus = "any";
      } else if (currentTab == 1) {
        that.orderStatus = "pending";
      } else if (currentTab == 2) {
        that.orderStatus = "processing";
      } else if (currentTab == 3) {
        that.orderStatus = "shipped";
      } else if (currentTab == 4) {
        that.orderStatus = "completed";
      } else if (currentTab == 5) {
        that.orderStatus = "cancelled";
    }
    // that.orderStatus = orderStatus;
    console.log("orderStatus值");
    console.log("orderStatus值" + that.orderStatus);
    // let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    // let openId = userSpecialInfo.openid;
    let me = wepy.getStorageSync(ME) || {};
    const json = await api.queryOrders({
      query: {
        customer: me.user_id,
        status: that.orderStatus,
        page: currentPage || 1,
        size: size || 10,
      }
    });
    if (json.statusCode == 200) {
      if (refresh) {
        that.orderList = json.data;
      } else {
        that.orderList = [...that.orderList, ...json.data];
      }
      that.pageTotal = json.header['X-WP-TotalPages'];
      console.log("pageTotal" + that.pageTotal);
      that.totalCount = json.header['X-WP-Total'];

      console.log("条目数：" + that.totalCount);
      if (json.data.pageTotal == 0) {
        //暂无数据
        that.is_empty = true;
      } else {
        that.is_empty = false;
      }
      // that.getMyOrderSize();
    } else {
      tip.error(json.data.message)
    }
    that.showLoading = false;
    that.$apply();
  }

  async getMyOrderSize() {
    console.log("订单数量统计");
    let that = this;
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let openId = userSpecialInfo.openid;
    const json = await api.getMyOrderSize({
      query: {
        openId: openId
      }
    });
    if (json.data.code == 0) {
      //待付款
      that.pendingPayCount = json.data.pendingPayCount;
      //待发货
      that.backrdersCount = json.data.backrdersCount;
      //待收货
      that.shippedCount = json.data.shippedCount;

      //重写list
      var dotList = ["全部订单", { name: "待支付", dotNum: that.pendingPayCount }, { name: "待收货", dotNum: that.backrdersCount }, "已完成"];
      this.$invoke("tab", "changeList", dotList);
      that.$apply();
    }
  }


  onLoad(opts) {
    let that = this;
    let title = "";
    that.orderList = [];
    that.currentTab = opts.type;
    that.getMyOrder(that.currentTab);
    //设置滚动高度
    let systemInfo = wepy.getStorageSync(SYSTEM_INFO);
    that.winHeight = systemInfo.windowHeight;
    that.$apply();
  }
  computed = {

  }
  methods = {
    getCurrentTab(cur, evt) {
      this.currentPage = 1;
      this.pageTotal = 0;
      this.orderList = [];

      let that = this;
      that.currentTab = cur;
      console.log("cur");
      console.log(cur);
      that.getMyOrder(that.currentTab);
      that.$apply();
    },
    /**
     * 滑动切换tab
     */
    bindChange(e) {
      let that = this;
      that.currentTab = e.detail.current;
      console.log("change tab...." + e.detailcurrent);
      that.$apply();
    },
  }
  events = {
    refreshOrderList(msg){
      console.log("msg值:"+msg);
      if(msg==3){
        this.currentTab=3;
        this.$apply();
        this.orderStatus = 4;
      }
      this.getMyOrder(this.currentTab,1,10,1);
    }
  }
  watch = {
    currentTab(val) {
      console.log("====" + val)
    }
  }

  //加载更多
  onReachBottom() {
    console.log("加载更多");
    let that = this;
    if (that.is_empty)
      return;
    that.showLoading = true;
    console.log(that.pageTotal + "===" + that.currentPage);
    //判断总页数是否大于翻页数
    if ((that.pageTotal) > that.currentPage) {
      //防止重复加载
      if (that.preventRepeatReuqest) {
        return true;
      }
      that.preventRepeatReuqest = true;
      that.currentPage++;
      console.log(this.currentTab);
      that.getMyOrder(this.currentTab,that.currentPage);

      that.preventRepeatReuqest = false;
    } else {
      that.showLoading = false;
      that.is_empty = true;
    }
  };

}

</script>
<style lang="less">
.swiper-tab-pd {
  padding: 0 30rpx;
  background: #fff;
}

.swiper-tab-order.active {
  color: #ff4856;
  border-bottom: 5rpx solid #ff4856;
}

</style>
